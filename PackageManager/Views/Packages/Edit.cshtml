@model PackageManager.Models.Package
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Package</h4>
<hr />
<form asp-action="Edit">
    @{
        await Html.RenderPartialAsync("~/Views/Shared/PackageEditForm.cshtml");
    }

    <h4>Items in package</h4>
    <hr />

    <div id="ItemsContainer">
        @Html.Partial("ItemsEditForm")
    </div>


    <button type="button" class="btn btn-warning" id="AddItemBtn">Add new item</button>
    <hr />

    <div class="row" style="margin-top: 10px">
        <div class="col-md-4">
            <div class="form-group">
                <input type="submit" value="Save and Seal" class="btn btn-success" asp-route-seal="true"/>
                <input type="submit" value="Save" class="btn btn-primary" asp-route-seal="false"/>
                <a asp-action="Index">
                    <input type="button" class="btn btn-danger" value="Back to list" />
                </a>

            </div>
        </div>
    </div>
</form>



<script type="text/javascript">
    let nItems;

    $(document).ready(function () {
        nItems = @Model.Items.Count;

        $('#AddItemBtn').click(function () {
            let url = `/Packages/LoadItemField/${nItems}`;
            fetch(url)
                .then(response => response.text())
                .then(text => $('#ItemsContainer').append(text))
                .then(() => nItems++)
        });
    });

    function deleteItemRow(i) {
        console.log(`removing ${i}`);
        document.getElementById(`itemRow${i}`).remove();
    }
</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

